[gd_scene load_steps=8 format=3 uid="uid://cfclydstafutb"]

[ext_resource type="ArrayMesh" uid="uid://ckeg56iapmafr" path="res://models/tower/towers .obj" id="1_cl14h"]
[ext_resource type="PackedScene" uid="uid://dbdgsx7s7yhtt" path="res://hoods/HUD.tscn" id="2_6s2fe"]
[ext_resource type="ArrayMesh" uid="uid://be7rkhv48pfbh" path="res://models/tower2/Only Tower.obj" id="3_rqcif"]

[sub_resource type="BoxMesh" id="BoxMesh_ufyrd"]

[sub_resource type="GDScript" id="GDScript_tn7tc"]
script/source = "extends Camera3D

var screen_size = null

func _ready(): screen_size = get_viewport().size

func _input(event):
	if event is InputEventMouseButton:
		zoom(event)

func _process(delta: float): move()
	
	
func zoom(event):
	if !event.is_pressed(): return
	if event.button_index == MOUSE_BUTTON_WHEEL_DOWN:
		global_transform.origin += -global_transform.basis.z
	if event.button_index == MOUSE_BUTTON_WHEEL_UP:
		global_transform.origin += global_transform.basis.z

func move():
	if !screen_size: return
	var mouse_position = get_viewport().get_mouse_position()
	if mouse_position.x > -4 and mouse_position.x < 2: position.x -= 1
	if mouse_position.x > screen_size.x - 2: position.x += 1
	
	if mouse_position.y > -4 and mouse_position.y < 2: position.z -= 1
	if mouse_position.y > screen_size.y - 2: position.z += 1
"

[sub_resource type="GDScript" id="GDScript_s1xp0"]
script/source = "extends Node


# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	pass
"

[sub_resource type="GDScript" id="GDScript_cttor"]
script/source = "#extends Node
#
#func _ready():
	#var state = GameState.new()
	#var baraks = ResourceLoader.load(\"res://resources/barracks.tres\")
	#print(baraks)
	#if baraks:
		#state.barraks = baraks
		#for unit in state.barraks:
			#print(unit)


extends Node

# Класс для загрузки и вывода данных из файла .tres
#class_name BarracksLoader
#
## Метод для загрузки и вывода данных из файла .tres
#func load_and_print_barracks_data(path: String) -> void:
	#var baraks = load(path)  # Загружаем ресурс из файла
	#if baraks == null:
		#print(\"Ошибка загрузки ресурса из: \", path)
		#return
	#
	## Печатаем информацию о загруженном ресурсе
	#print(\"Загружен ресурс типа: \", typeof(baraks))
	#
	## Итерируем по массиву подресурсов и выводим их данные
	#if baraks.barraks.size() > 0:
		#print(\"Данные о барраках:\")
		#for unit in baraks.barraks:
			#print(\"Имя: \", unit.name)
			#print(\"Цена: \", unit.price)
			#print(\"Модель: \", unit.model)
	#else:
		#print(\"Нет данных о барраках в ресурсе.\")
#
## Встроенная функция _ready() вызывается при запуске сцены
#func _ready() -> void:
	#var barracks_loader = BarracksLoader.new()
	#barracks_loader.load_and_print_barracks_data(\"res://resources/barracks.tres\")
"

[node name="Game" type="Node2D"]

[node name="Towers" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -128.016, 5.39145, -0.239136)
mesh = ExtResource("1_cl14h")

[node name="terain" type="MeshInstance3D" parent="."]
transform = Transform3D(277.366, 0, 0, 0, 1.08138, 0, 0, 0, 152.625, -12.3662, 0, -1.01029)
mesh = SubResource("BoxMesh_ufyrd")

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.5, 0.866026, 0, -0.866026, 0.5, -70.318, 36.054, 23.543)
fov = 99.0
script = SubResource("GDScript_tn7tc")

[node name="OmniLight3D" type="OmniLight3D" parent="."]
transform = Transform3D(0.999682, 0.0252173, 0, -0.0252173, 0.999682, 0, 0, 0, 1, -38.7003, 26.9599, -0.642187)
light_energy = 2.59
omni_range = 4096.0

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="Hud" parent="CanvasLayer" instance=ExtResource("2_6s2fe")]
offset_left = -4.0
offset_top = 3.0
offset_right = -4.0
offset_bottom = 3.0

[node name="OnlyTower" type="MeshInstance3D" parent="."]
transform = Transform3D(0.02, 0, 0, 0, 0.02, 0, 0, 0, 0.02, 90.5836, -1.7926, -1.33664)
mesh = ExtResource("3_rqcif")

[node name="TowerController" type="Node" parent="."]
script = SubResource("GDScript_s1xp0")

[node name="GameState" type="Node" parent="."]
script = SubResource("GDScript_cttor")
